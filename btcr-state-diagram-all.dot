/// graphviz exploration of DID:BTCR state diagram  [fr0b 20170718 08:19 ST] 

//  dot -Tpng btcr-state-diagram-all.dot > btcr-state-diagram-all.png && open btcr-state-diagram-all.png
//  env PNG_VIEWER=open make -f Makefile.graphviz btcr-state-diagram-all.png

digraph self_sovereign_btcr_state_diagram {
  pad="1,1" //i.e. margin

#if defined(DIAGRAM_KEY) || defined(DIAGRAM_ALL)
  subgraph cluster_isographs_A {
    label="Example Isographs \n\n (These two state diagrams are logically the same. \n One is in typical form, \n and one includes the Bitcoin transaction as an explicit node, \n which creates two edges for the state transition.  \n This is the format used in the rest of this diagram.)\n\n"

    tx_X [label="node: tx_X", shape=box]

    state_A_ -> state_A_ [label="edge: tx_X"]
    state_A -> tx_X:sw [
      label="double edges: tx_X", 
      arrowhead=odot, 
      arrowtail=crow, 
      dir=both
    ]
    tx_X:se -> state_A
  }

  subgraph cluster_state_shapes {
    label="Key for Shapes"

    transaction [
      label="TX: transaction \n (An edge between states.)"
      shape=box
    ]
    ending   [shape=doubleoctagon]
    deciding [shape=Mdiamond]
    resting  [shape=doublecircle]
    starting [shape=circle]
  }
#endif

#if defined(DIAGRAM_RECOVERY) || defined(DIAGRAM_SIMPLE) || defined(DIAGRAM_ALL)
  init [
    label = "state: DID Init \n (with revocation proof)"
    shape = circle
    color=green
  ]
#endif

#if defined(DIAGRAM_SIMPLE) || defined(DIAGRAM_ALL)
  valid_simple [
    label = "state: Valid Simple DID"
    shape=doublecircle
  ]
#endif

#if defined(DIAGRAM_RECOVERY) || defined(DIAGRAM_ALL)
  valid_with_recovery_proof [
    label = "state: Valid DID, \n (recovery proof in prior TX)"
    shape=doublecircle
  ]

  settling [
    label = "state: Settling... \n (default 24 hours)"
    shape=Mdiamond
    height=1.5
    width=2
    color=blue
  ]

  frozen [
    shape=Mdiamond
    height=1.5
    width=2
    color=orange
    label = "state: Frozen... \n (default 24 hours)"
  ]
#endif

#if defined(DIAGRAM_RECOVERY) || defined(DIAGRAM_SIMPLE) || defined(DIAGRAM_ALL)
  revoked [
    shape = doubleoctagon
    color=orange
    label = "state: Revoked!"
  ]
#endif

#if defined(DIAGRAM_RECOVERY) || defined(DIAGRAM_SIMPLE) || defined(DIAGRAM_ALL)
  subgraph cluster_theft {
    label="Key Compromise / Theft \n (Compliance is with respect to the resulting transaction chain \n and whether it validates as a DID:BTCR update.)"
#endif

#if defined(DIAGRAM_SIMPLE) || defined(DIAGRAM_ALL)
    tx_theft_A0 [
      label = "TX: noncompliant BTC theft"
      shape=box
      color=red
    ]

    tx_theft_A1 [
      label = "TX: compliant DID theft"
      shape=box
      color=red
    ]
#endif

#if defined(DIAGRAM_RECOVERY) || defined(DIAGRAM_ALL)
    tx_theft_B0 [
      label = "TX: noncompliant BTC theft"
      shape=box
      color=red
    ]

    tx_theft_B1 [
      label = "TX: compliant DID theft"
      shape=box
      color=red
    ]
#endif

#if defined(DIAGRAM_RECOVERY) || defined(DIAGRAM_SIMPLE) || defined(DIAGRAM_ALL)
  }
#endif
 
#if defined(DIAGRAM_RECOVERY) || defined(DIAGRAM_SIMPLE) || defined(DIAGRAM_ALL)
  tx_revocation [
    label = "TX: explicit immediate revocation"
    shape=box
    color=orange
  ]
#endif

#if defined(DIAGRAM_RECOVERY) || defined(DIAGRAM_ALL)
  tx_recovery [
    label = "TX: recovery \n (DID follows this UTXO!)"
    shape=box
  ]
#endif

#if defined(DIAGRAM_SIMPLE) || defined(DIAGRAM_ALL)
  tx_simple_update [
    label = "TX: simplest compliant update"
    shape=box
    color=blue
  ]
#endif

#if defined(DIAGRAM_RECOVERY) || defined(DIAGRAM_ALL)
  tx_update_with_recovery_proof [
    label = "TX: compliant update \n (also including recovery proof)"
    shape=box
    color=blue
  ]
#endif

#if defined(DIAGRAM_SIMPLE) || defined(DIAGRAM_ALL)
  init -> valid_simple
#endif

#if defined(DIAGRAM_RECOVERY) || defined(DIAGRAM_ALL)
  init -> valid_with_recovery_proof [
    weight=0
  ]
#endif

#if defined(DIAGRAM_RECOVERY) || defined(DIAGRAM_ALL)
  valid_with_recovery_proof -> tx_update_with_recovery_proof [
    arrowhead=odot, 
    arrowtail=crow,     
    dir=both
    color=blue
  ]
  tx_update_with_recovery_proof -> settling [
    color=blue
  ]

  settling:w -> valid_with_recovery_proof [
    label="timeout      ", 
    fontcolor=blue,
    color=blue
  ]
  settling:e -> tx_revocation [
    color=orange, 
    fontcolor=orange, 
    arrowhead=odot, 
    arrowtail=crow, 
    dir=both
  ]
#endif

#if defined(DIAGRAM_SIMPLE) || defined(DIAGRAM_ALL)
  valid_simple -> tx_simple_update [
    arrowhead=odot,                
    arrowtail=crow, 
    dir=both
    color=blue
  ]
  tx_simple_update -> valid_simple [
    color=blue
  ]
#endif

#if defined(DIAGRAM_SIMPLE) || defined(DIAGRAM_ALL)
  valid_simple -> tx_theft_A0 [
    color=red, 
    arrowhead=odot, 
    arrowtail=crow, 
    dir=both
  ]
  tx_theft_A0 -> revoked [
    color=red, 
  ]
#endif

#if defined(DIAGRAM_RECOVERY) || defined(DIAGRAM_ALL)
  valid_with_recovery_proof -> tx_theft_B0 [
    color=red, 
    arrowhead=odot, 
    arrowtail=crow, 
    dir=both 
  ]
#if defined(DIAGRAM_RECOVERY)
#define FROZEN_PORT frozen:n
#else
#define FROZEN_PORT frozen:nw
#endif
  tx_theft_B0 -> FROZEN_PORT [
    color=red, 
  ]
#endif

#if defined(DIAGRAM_SIMPLE) || defined(DIAGRAM_ALL)
  valid_simple -> tx_theft_A1 [
    label="(temporarily succeeds \n until revoked \n using old revocation) ",  
    color=red, 
    arrowhead=odot, 
    arrowtail=crow, 
    dir=both
  ]
  tx_theft_A1 -> valid_simple [
    fontcolor=red, 
    color=red, 
  ]
#endif

#if defined(DIAGRAM_RECOVERY) || defined(DIAGRAM_ALL)
  valid_with_recovery_proof -> tx_theft_B1 [
    color=red, 
    arrowhead=odot, 
    arrowtail=crow, 
    dir=both
  ]
  tx_theft_B1 -> settling [
    color=red
  ]

  frozen:e -> tx_recovery [
    arrowhead=odot, 
    arrowtail=crow, 
    dir=both
  ]
  frozen:w -> revoked [
    label="timeout", 
    color=orange, 
    fontcolor=orange,   
  ]
  tx_recovery -> valid_with_recovery_proof [
    fontcolor=darkgreen, 
  ]

  valid_with_recovery_proof -> tx_revocation [
    color=orange, 
    arrowhead=odot, 
    arrowtail=crow, 
    dir=both
  ]
#endif

#if defined(DIAGRAM_SIMPLE) || defined(DIAGRAM_ALL)
  valid_simple -> tx_revocation [
    color=orange, 
    arrowhead=odot, 
    arrowtail=crow, 
    dir=both
  ]
#endif

#if defined(DIAGRAM_RECOVERY) || defined(DIAGRAM_SIMPLE) || defined(DIAGRAM_ALL)
  tx_revocation -> revoked [
    color=orange, 
  ]
#endif

#if defined(DIAGRAM_RECOVERY) || defined(DIAGRAM_SIMPLE) || defined(DIAGRAM_ALL)
  version [
    shape=none, 
    label=BUILD_STRING
  ]
  {rank=max version}
#endif

}
